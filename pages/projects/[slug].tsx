import {
    AspectRatio,
    Box,
    Center,
    Container,
    Flex,
    Text,
} from "@chakra-ui/layout"
import DOMPurify from "dompurify"
import { GetStaticProps, InferGetStaticPropsType } from "next"
import Head from "next/head"
import Image from "next/image"
import { useEffect, useState } from "react"
import BasicHeading from "../../components/BasicHeading"
import { IProject } from "../../types/global"

export default function ProjectPage({
    project,
}: InferGetStaticPropsType<typeof getStaticProps>) {
    const [escapedDescription, setEscapedDescription] = useState<string>("");

    useEffect(() => {
        setEscapedDescription(DOMPurify.sanitize(project.description));
    }, [])
    return (
        <>
            <Head>
                <title>{project.title} - Travis Saylor's Portfolio</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <BasicHeading title={project.title} />

            <Flex pb={4} flex="2 1 auto" justifyContent="center">
                <AspectRatio
                    display="flex"
                    flex={1}
                    maxW="800px"
                    ratio={16 / 9}
                    sx={{ position: "relative" }}>
                    <Image
                        src={`http://localhost/${project.image}`}
                        layout="fill"
                        objectFit="contain"
                    />
                </AspectRatio>
            </Flex>

            <Container pb={4}>
                <Text
                    dangerouslySetInnerHTML={{ __html: escapedDescription }}
                />
            </Container>
        </>
    )
}

// This function gets called at build time
export async function getStaticPaths() {
    // Call an external API endpoint to get projects
    const res = await fetch("http://localhost/api/projects")
    const projects: IProject[] = await res.json()

    // Get the paths we want to pre-render based on projects
    const paths = projects.map((project) => ({
        params: { slug: project.slug },
    }))

    // We'll pre-render only these paths at build time.
    // { fallback: false } means other routes should 404.
    return { paths, fallback: false }
}

// This also gets called at build time
export const getStaticProps: GetStaticProps = async ({ params }) => {
    if (!params || !params.slug) {
        return {
            notFound: true,
        }
    }

    const res = await fetch(`http://localhost/api/projects/${params.slug}`)
    const project = await res.json()

    if (!project) {
        return {
            notFound: true,
        }
    }

    return { props: { project } }
}
